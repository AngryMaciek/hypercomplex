name: Catch2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  platform-compatibility:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
      fail-fast: false
    env:
      working-directory: .test/unit

    steps:

      - name: Install MPFR
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y libmpfr-dev
            dpkg -L libmpfr-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install mpfr
          fi

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Library Directory
        working-directory: ${{env.working-directory}}
        run: cp -r ../../hypercomplex hypercomplex

      - name: Display compiler version
        run: g++ --version

      - name: Compile Test Program
        working-directory: ${{env.working-directory}}
        run: g++ -O0 -Wall --std=c++14 -lmpfr -lgmp -o test test.cpp hypercomplex/Hypercomplex.cpp

      - name: Execute Test Program
        working-directory: ${{env.working-directory}}
        run: ./test -d yes -w NoAssertions --use-colour yes --benchmark-samples 100 --benchmark-resamples 100000

  code-coverage:
    runs-on: ubuntu-20.04
    env:
      working-directory: .test/unit

    steps:

      - name: Install MPFR
        run: |
          sudo apt-get update -y
          sudo apt-get install libmpfr-dev

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Library Directory
        working-directory: ${{env.working-directory}}
        run: cp -r ../../hypercomplex hypercomplex

      - name: Display compiler version
        run: g++ --version

      - name: Compile Test Program
        working-directory: ${{env.working-directory}}
        run: g++ -O0 -Wall --std=c++14 -lmpfr --coverage -o test test.cpp hypercomplex/Hypercomplex.cpp

      - name: Execute Test Program
        working-directory: ${{env.working-directory}}
        run: ./test

      - name: Generate Coverage Report
        run: gcov -o . test.cpp

      - name: Submit Report to Codecov
        working-directory: ${{env.working-directory}}
        run: |
          CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}
          bash <(curl -s https://codecov.io/bash)

  memcheck:
    runs-on: ubuntu-20.04
    env:
      working-directory: .test/unit

    steps:

      - name: Install MPFR
        run: |
          sudo apt-get update -y
          sudo apt-get install libmpfr-dev

      - name: Install Valgrind
        run: sudo apt install -y valgrind

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Library Directory
        working-directory: ${{env.working-directory}}
        run: cp -r ../../hypercomplex hypercomplex

      - name: Display compiler version
        run: g++ --version

      - name: Compile Test Program
        working-directory: ${{env.working-directory}}
        run: g++ -O0 -Wall --std=c++14 -lmpfr -o test test.cpp hypercomplex/Hypercomplex.cpp

      - name: Analyze Test Program Execution
        working-directory: ${{env.working-directory}}
        run: |
          valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=valgrind.txt ./test
          cat valgrind.txt
          grep -q -w "All heap blocks were freed -- no leaks are possible" "valgrind.txt"
