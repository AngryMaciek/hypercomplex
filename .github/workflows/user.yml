name: Include&Install

on: [push]

jobs:

  Include:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04]
    env:
      working-directory: .test/include

    steps:

      - name: Install MPFR
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y libmpfr-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install mpfr
          fi

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Library Directory
        working-directory: ${{env.working-directory}}
        run: cp -r ../../hypercomplex hypercomplex

      - name: Display compiler version
        run: g++ --version

      - name: Compile Test Program
        working-directory: ${{env.working-directory}}
        run: g++ --std=c++17 test.cpp -o test -lmpfr -lgmp

      - name: Execute Test Program
        working-directory: ${{env.working-directory}}
        run: ./test

  Install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04]
    env:
      test-directory: .test/install
      lib-directory: "hypercomplex"

    steps:

      - name: Install MPFR
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y libmpfr-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install mpfr
          fi

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Display Make version
        run: make --version

      - name: Display compiler version
        run: g++ --version

      - name: Copy Header-Only Library
        working-directory: ${{env.lib-directory}}
        run: sudo make install

      - name: Compile Test Program
        working-directory: ${{env.test-directory}}
        run: g++ --std=c++17 test.cpp -o test -lmpfr -lgmp

      - name: Execute Test Program
        working-directory: ${{env.test-directory}}
        run: ./test

      - name: Remove Copied Library
        working-directory: ${{env.lib-directory}}
        run: sudo make uninstall

  Conda:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Miniconda & Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.11
          auto-update-conda: true
          auto-activate-base: true

      - name: Install conda-build
        shell: bash -l {0}
        run: conda install conda-build

      - name: Conda Info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: Build Anaconda Package
        shell: bash -l {0}
        run: conda build .

      - name: Install the Package
        shell: bash -l {0}
        run: conda install -c ${CONDA_PREFIX}/conda-bld/ hypercomplex --yes

      # test installed package!
